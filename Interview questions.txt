working Model :- Agile methodolgy
application deployment structure ?
exception handling (Multiple exception handling) Global exception handler ,@RestControllerAdvice
          priorotize -> which exceptions to handle
Logs explain
abstract interfaces scenarios :- when to choose abstract class or interface
Garbage collection :- which garbage collection startegy u choosed?
java is 100% object oriented or not?  ->partially -> since it has primitive data types and static methods and variables which is not related to objects
when to use final scenario? when use final class and methods? state the scenarios? whre it is used in project
   performance issues while using final keyword -> 

Polymorphism :- in project whre it is being used? how it solves design problem or architecture level problem

===============================================================================================
4 Years Exp.
HashMap and HashSet :- internal working
HashCode and equals method
Collecion framework :- why dont we use premitive data types?
Difference between RestController and Controller?
Best practises of writing Rest Api?
@Componenet , @Respository, @Service annotations..
Instead of @Service can we use @Componenet in service class? ..component -> generic ....service -> component+additional things
Spring bean lifecycle
Uses of ResponseEntity
How to implement -> if any api is taking too much time then give timeout error? (Circuit breakers)
How does basic authentication work in rest api?
How to secure sensitive data in springboot application that is accessed by multiple users having different roles?
Cryptographic hashing?
Monotoring logs which tools used? I n your project how you monitor logs?
Classpath?
How to revert the changes in git if you accidentely pushed a file to main branch?
what is the use of unit testing ?

===============================================================================================

3 yeasrs exp.
How you secure application after moving it to cloud?
JDK,JRE,JVM
ClassLoaders in java
Delegation models working in classloading
Stack and heap memory
java 11 features
Singleton classes
why main method is public and static
sereliazed data?
   why shouldent we serealize data into text file?
@Transient?
finalize keyword has any role in garbage collection?
what algorithm used by jvm while garbage collection?
How memory leaks happen in java even if having automatic garbage collector?
how to ensure code quality and maintainability of project?
how would you modify and existing springboot application to convert into serverless architecture?
How springboot decides which server to use?
how would you handle exception in sptingboot rest application?
how can we handle multiple beans of same type?
Aspect oriented programming?

=======================================================================================================

Microservice architecture over monolithic
why stringbuffer called mutable
Different ways to create objects in java -> new keyword, reflection(class.forname), clone method, deserialize object from the source, dependency injection
can you use private constructor and where?  -> singleton design pattern
Threads methods how do they communicate with each other-> wait, notify, notifyAll
what is starter dependency in springboot framework?
how database connection established in springboot application?
changes in internal working of hashmap in java 8
changes in garbage collection in java 8
why default method introduced in java 8
Types of scopes in springboot application
Design pattern used in project
Does singleton pattern affects unit tests?
   what design principle does singleton violates?
Solid Principle

============================================================================================

5 yrs + exp

How to secure rest api
what is rest versioning? => backword compatibility should be available
can we disable autoconfiguration?
EnableAutoconfiguration?
can we override apache tomcat server?
cashing in application? how to add cashing?
for to develop a schema for car rental service?
how to store ratings and comments?
difference between @Componenet and @Service annotations..
can we use component instead of service annotation?
have you integrated any database in your project?
How to resolve the conflict in git?
where you used arraylist ,LL, Hashmap, Hashset in project?
Why optional is introduced in java 8?
Where circuit breaker comes to picture?
why do we use packages in springboot project?
can we override and overload main method?
transient keyword?
@transactinal annotation
working of async annotaion
why do we use unit test cases even though we can deploy application without it?
@Qualifier annotation

code:- given :-[1,2,4,0,2,1,3,0,5,0,7,0]
       output:-[1,2,4,2,1,3,5,7,0,0,0,0]
	   All 0 should be in right direction and all non zero numbers should be in left